{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glgre\\\\Documents\\\\School\\\\CS\\\\CSCI3341\\\\webApp\\\\ClassRater\\\\client\\\\src\\\\components\\\\ListPostAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport PostModalPM from \"./PostModalPM\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListPostAdmin = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n\n  const deletePost = async id => {\n    try {\n      const deletePost = await fetch(`http://localhost:5000/posts/${id}`, {\n        method: \"DELETE\"\n      });\n      setPosts(posts.filter(p => p.post_id !== id));\n      window.location = \"/post_management\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/posts\");\n      const jsonData = await response.json();\n      setPosts(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Post ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Professor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Post Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Post Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.post_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.professor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(PostModalPM, {\n              p: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.user_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.post_type ? \"Review\" : \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deletePost(post.post_id),\n              children: \"Delete Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, post.post_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ListPostAdmin, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = ListPostAdmin;\nexport default ListPostAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPostAdmin\");","map":{"version":3,"sources":["C:/Users/glgre/Documents/School/CS/CSCI3341/webApp/ClassRater/client/src/components/ListPostAdmin.js"],"names":["React","Fragment","useEffect","useState","PostModalPM","ListPostAdmin","posts","setPosts","deletePost","id","fetch","method","filter","p","post_id","window","location","err","console","error","message","getPosts","response","jsonData","json","map","post","professor","code","rating","user_id","post_type"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport PostModalPM from \"./PostModalPM\";\r\n\r\nconst ListPostAdmin = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const deletePost = async id => {\r\n        try{\r\n            const deletePost = await fetch(`http://localhost:5000/posts/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            setPosts(posts.filter(p => p.post_id !== id));\r\n            window.location = \"/post_management\";\r\n        }catch (err){\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getPosts = async () => {\r\n        try{\r\n            const response = await fetch(\"http://localhost:5000/posts\");\r\n            const jsonData = await response.json();\r\n\r\n            setPosts(jsonData);\r\n        }catch (err){\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, []);\r\n\r\n    return <Fragment>\r\n        {\" \"}\r\n        <table className=\"table mt-5 text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>Post ID</th>\r\n              <th>Professor</th>\r\n              <th>Post Body</th>\r\n              <th>Code</th>\r\n              <th>Rating</th>\r\n              <th>User ID</th>\r\n              <th>Post Type</th>\r\n              <th>Delete Post</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {posts.map(post => (\r\n                    <tr key={post.post_id}>\r\n                        <td>{post.post_id}</td>\r\n                        <td>{post.professor}</td>\r\n                        <td>\r\n                          <PostModalPM p = {post}/>\r\n                        </td>\r\n                        <td>{post.code}</td>\r\n                        <td>{post.rating}</td>\r\n                        <td>{post.user_id}</td>\r\n                        <td>{(post.post_type) ? \"Review\":\"Description\" }</td>\r\n                        <td>\r\n                        <button \r\n                            className=\"btn btn-danger\" \r\n                            onClick = {() => deletePost(post.post_id)}\r\n                        >\r\n                            Delete Post\r\n                        </button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n          </tbody>\r\n        </table>\r\n    </Fragment>\r\n};\r\n\r\nexport default ListPostAdmin;"]},"metadata":{},"sourceType":"module"}